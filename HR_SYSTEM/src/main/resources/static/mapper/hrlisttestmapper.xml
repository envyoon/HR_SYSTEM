<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.precursor.hrsystem.mvc.hrlist.a03_dao.HrListDao">

	<!-- 인사정보 리스트 출력 쿼리  
	<select id="getHrList" resultType="HrListTestVO" parameterType="HrListTestVO">
		select im_key, im_user_name_kr, im_user_name_en, im_user_rank, im_dept, im_hire_date, birymd
		from human_resource
		where 1=1
		<if test="kind!=null and kind=='이름'">  null이 아니고 이름이 선택 되었을 때  
		and im_user_name_kr like '%' || #{sch} || '%'
		</if>
		<if test="kind!=null and kind=='부서'">  null이 아니고 부서가 선택 되었을 때 
		and im_dept like '%' || #{sch} || '%'
		</if>
		order by im_key asc
	</select>
	-->
	
	
	<!-- 인사 정보 갯수를 체크하는 쿼리 --> 
	<select id="totCnt" parameterType="PagingVO" resultType="int">
			select count(*)
			from human_resource 
			where 1=1
			<if test="kind!=null and kind=='이름'">  <!-- null이 아니고 이름이 선택 되었을 때  -->
			and im_user_name_kr like '%' || #{sch} || '%'
			</if>
			<if test="kind!=null and kind=='부서'">  <!-- null이 아니고 부서가 선택 되었을 때  -->
				and im_dept like '%' || #{sch} || '%'
			</if>
	 </select>
	
	
	<!-- 인사정보 가져오기 (페이징 처리 추가된 것) -->
	<select id="getHrList" resultType="HrListTestVO" parameterType="HrListTestVO">
		select * 
		from (
			  SELECT ROWNUM cnt, hr.im_key, hr.im_user_name_kr, hr.im_user_name_en, hr.im_user_rank, hr.im_dept, hr.im_hire_date, hr.birymd
			  FROM STSBOOT.HUMAN_RESOURCE hr
			  WHERE 1=1
			  <if test="kind!=null and kind=='이름'">  <!-- null이 아니고 이름이 선택 되었을 때  -->
			  	 and im_user_name_kr like '%' || #{sch} || '%'
			  </if>
			  <if test="kind!=null and kind=='부서'">  <!-- null이 아니고 부서가 선택 되었을 때  -->
				 and im_dept like '%' || #{sch} || '%'
			  </if>
			  ORDER BY cnt DESC
			  )
		where cnt BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 인사정보 등록 쿼리 -->
	<insert id="insertHR" parameterType="HrListTestVO">
		INSERT INTO STSBOOT.human_resource (IM_KEY, IM_USER_ID, IM_USER_NAME_KR, IM_USER_NAME_EN, IM_USER_RANK, IM_DEPT, IM_USER_MAIL, IM_PHONE_NUM, IM_HIRE_DATE, IM_UPDATE, IM_USER_PW, IM_FLAG, IM_STATUS, ERCO_YMD, RTRM_YMD, BIRYMD)
		VALUES(
		im_key_num.nextval,
		#{imUserId},
		#{imUserNameKr},
		#{imUserNameEn},
		#{imUserRank},
		#{imDept},
		#{imUserMail},
		#{imPhoneNum},
		#{imHireDate},
		#{imUpdate},
		#{imUserPw},
		#{imFlag},
		#{imStatus},
		#{ercoYmd},
		#{rtrmYmd},
		#{birymd}
		)
	</insert>

	<!-- 인사정보 상세 가져오는 쿼리 -->
	<select id="getimKey" resultType="HrListTestVO">
		select *
		from STSBOOT.human_resource
		where im_key = #{imKey}
	</select>
	
	<!-- 인사정보 업데이트 쿼리 -->
	<update id = "uptHr" parameterType="HrListTestVO">
	update STSBOOT.human_resource
	set
		im_key = #{imKey},
		im_user_id = #{imUserId}, 
		im_user_name_kr = #{imUserNameKr}, 
		im_user_name_en = #{imUserNameEn}, 
		im_user_rank = #{imUserRank}, 
		im_dept = #{imDept},
		im_user_mail = #{imUserMail}, 
		im_phone_num = #{imPhoneNum}, 
		im_hire_date = #{imHireDate}, 
		im_update = #{imUpdate}, 
		im_user_pw = #{imUserPw},
		im_flag = #{imFlag}, 
		im_status = #{imStatus}, 
		erco_ymd = #{ercoYmd}, 
		rtrm_ymd = #{rtrmYmd}, 
		birymd = #{birymd}
	where im_key = #{imKey}	
	</update>
	
	<!-- 인사정보 삭제 쿼리 -->
	<delete id="delHr" parameterType="int">
		delete
		from STSBOOT.human_resource 
		where im_key = #{imKey}
	</delete>
	
	
	
	<!-- 전체 인원수 확인하는 쿼리 
	<select id="totCnt"  parameterType="boardSch" resultType="int">
			select count(*)
			from human_resource
			where 1=1
	</select>
	-->
	
	<!-- 페이징 처리 추가된 쿼리 
	<select id="getHrList" resultType="HrListTestVO" parameterType="HrListTestVO">
		select *
		from (
			select rownum cnt, level, h.* 
			from human_resource h
			where 1=1
			START WITH refno=0
			CONNECT BY PRIOR no=refno
			ORDER siblings BY no desc )
			where cnt between #{start} and #{end}
	</select>
	-->
	
	
	
	<!-- 회원 정보 SQL (페이징 처리)
	<select id="getMemberList" resultType="member" parameterType="member">
		select *
		from pmsmember
		where name like '%' || #{name} || '%'
		ORDER BY MEM_NUM asc
	</select>
	-->
	

	
	
	<!-- 
	<insert id="getHrList" parameterType="HrListTest">
    <selectKey order="BEFORE" keyProperty="IM_KEY" resultType="int">
        select 
            to_number(to_char(sysdate,'YYMMDD') || nvl(to_char(max(substr(IM_KEY,7))),'0000'))+1
        from
            HUMAN_RESOURCE
         where
            to_char(sales_date,'YYYYMMDD') = to_char(sysdate,'YYYYMMDD')
    </selectKey>
    insert
        into STSBOOT.HUMAN_RESOURCE
            (IM_KEY, IM_USER_ID, IM_USER_NAME_KR, IM_USER_NAME_EN, IM_USER_RANK, IM_DEPT, IM_USER_MAIL, IM_PHONE_NUM, IM_HIRE_DATE, IM_UPDATE, IM_USER_PW, IM_FLAG, IM_STATUS, ERCO_YMD, RTRM_YMD, BIRYMD)
        values
            (#{IM_KEY}, #{IM_USER_ID}, #{IM_USER_NAME_KR}, #{IM_USER_NAME_EN}, #{IM_USER_RANK}, #{IM_DEPT}, #{IM_USER_MAIL}, #{IM_PHONE_NUM}, #{IM_HIRE_DATE}, #{IM_UPDATE}, #{IM_USER_PW}, #{IM_FLAG}, #{IM_STATUS}, #{ERCO_YMD}, #{RTRM_YMD}, #{BIRYMD})
	</insert>
	 -->
	
</mapper>